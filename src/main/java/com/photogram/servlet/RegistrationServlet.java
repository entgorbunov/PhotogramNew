package com.photogram.servlet;import com.photogram.dto.userDto.UserDtoFromWeb;import com.photogram.entity.Gender;import com.photogram.exceptions.ValidationException;import com.photogram.service.userService.UserServiceForWeb;import com.photogram.util.Constants;import com.photogram.util.JspHelper;import com.photogram.util.UrlPath;import jakarta.servlet.ServletException;import jakarta.servlet.annotation.MultipartConfig;import jakarta.servlet.annotation.WebServlet;import jakarta.servlet.http.HttpServlet;import jakarta.servlet.http.HttpServletRequest;import jakarta.servlet.http.HttpServletResponse;import java.io.IOException;import java.time.LocalDate;@MultipartConfig(location = UrlPath.USERS_PICTURES, fileSizeThreshold = 1024 * 1024)@WebServlet(value = UrlPath.REGISTRATION, name = "RegistrationServlet")public class RegistrationServlet extends HttpServlet {    private static final UserServiceForWeb USER_SERVICE_FOR_WEB_ATOMIC_REFERENCE = UserServiceForWeb.getUserServiceForWebAtomicReference();    @Override    public void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {        req.setAttribute(Constants.GENDERS, Gender.values());        req.getRequestDispatcher(JspHelper.getPath(Constants.REGISTRATION)).forward(req, resp);    }    @Override    public void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {        UserDtoFromWeb userDtoFromWeb = UserDtoFromWeb.builder()                .username(req.getParameter(Constants.USERNAME))                .name(req.getParameter(Constants.NAME))                .password(req.getParameter(Constants.PASSWORD))                .image(req.getPart(Constants.IMAGE))                .email(req.getParameter(Constants.EMAIL))                .birthday(LocalDate.parse(req.getParameter(Constants.BIRTHDAY)))                .gender(Gender.valueOf(req.getParameter(Constants.GENDER)))                .build();        try {            USER_SERVICE_FOR_WEB_ATOMIC_REFERENCE.create(userDtoFromWeb);            resp.sendRedirect(UrlPath.LOGIN);        } catch (ValidationException exception) {            req.setAttribute(Constants.ERROR, exception.getErrors());            doGet(req, resp);        }    }}