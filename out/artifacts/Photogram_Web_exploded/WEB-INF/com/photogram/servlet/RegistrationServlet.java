package com.photogram.servlet;import com.photogram.dto.UserDto;import com.photogram.entity.Gender;import com.photogram.entity.Role;import com.photogram.exceptions.ValidationException;import com.photogram.service.ImageService;import com.photogram.service.UserService;import com.photogram.util.FileData;import com.photogram.util.JspHelper;import jakarta.servlet.ServletException;import jakarta.servlet.annotation.MultipartConfig;import jakarta.servlet.annotation.WebServlet;import jakarta.servlet.http.HttpServlet;import jakarta.servlet.http.HttpServletRequest;import jakarta.servlet.http.HttpServletResponse;import jakarta.servlet.http.Part;import java.io.IOException;import java.nio.file.Paths;import java.util.Arrays;@MultipartConfig(fileSizeThreshold = 1024 * 1024)@WebServlet(value = "/registration", name = "RegistrationServlet")public class RegistrationServlet extends HttpServlet {    private static final String USERS_ENT_DESKTOP_PICTURES = "/Users/ent/Desktop/Pictures/";    private final UserService userService = UserService.getInstance();    private final ImageService imageService = ImageService.getINSTANCE();    @Override    public void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {        populateInitialData(req);        req.getRequestDispatcher(JspHelper.getPath("registration")).forward(req, resp);    }    @Override    public void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {        processRegistration(req, resp);    }    private void populateInitialData(HttpServletRequest req) {        req.setAttribute("roles", Arrays.stream(Role.values()).map(Enum::name).toList());        req.setAttribute("genders", Arrays.stream(Gender.values()).map(Enum::name).toList());    }    private void processRegistration(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {        try {            UserDto userDto = buildUserDtoFromRequest(req);            userService.create(userDto);            resp.sendRedirect("/login");        } catch (ValidationException e) {            req.setAttribute("errors", e.getErrors());            doGet(req, resp);        }    }    private UserDto buildUserDtoFromRequest(HttpServletRequest req) throws IOException, ServletException {        Part imagePart = req.getPart("image");        String submittedFileName = Paths.get(imagePart.getSubmittedFileName()).getFileName().toString();        String imagePath = USERS_ENT_DESKTOP_PICTURES + submittedFileName;        FileData fileData = new FileData(imagePath, imagePart.getInputStream());        imageService.upload(fileData.getFileName(), fileData.getFileStream());        return UserDto.builder()                .name(req.getParameter("name"))                .password(req.getParameter("password"))                .imagePath(imagePath)                .email(req.getParameter("email"))                .birthday(req.getParameter("birthday"))                .role(req.getParameter("role"))                .gender(req.getParameter("gender"))                .build();    }}